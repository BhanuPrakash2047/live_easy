
version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - liveasy-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - liveasy-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - liveasy-network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "load-status-changes:1:1,booking-events:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - liveasy-network

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - liveasy-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - liveasy-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - liveasy-network

  # Application Services
  discovery-service:
    build:
      context: ./discovery-service
    ports:
      - "8761:8761"
    networks:
      - liveasy-network

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service
    networks:
      - liveasy-network

  auth-service:
    build:
      context: ./auth-service
    depends_on:
      - discovery-service
      - postgres
      - kafka
      - zipkin
    networks:
      - liveasy-network

  load-service:
    build:
      context: ./load-service
    depends_on:
      - discovery-service
      - postgres
      - redis
      - kafka
      - zipkin
    networks:
      - liveasy-network

  booking-service:
    build:
      context: ./booking-service
    depends_on:
      - discovery-service
      - load-service
      - postgres
      - redis
      - kafka
      - zipkin
    networks:
      - liveasy-network

networks:
  liveasy-network:
    driver: bridge

volumes:
  postgres-data:
